/*
LESS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: @icon-home-width;
}

The large array-like variables contain all information about a single icon
@icon-home: x y offset_x offset_y width height total_width total_height image_path name;

At the bottom of this section, we provide information about the spritesheet itself
@spritesheet: width height image @spritesheet-sprites;
*/
@1-menu-home-name: '1.menu-home';
@1-menu-home-x: 0px;
@1-menu-home-y: 30px;
@1-menu-home-offset-x: 0px;
@1-menu-home-offset-y: -30px;
@1-menu-home-width: 20px;
@1-menu-home-height: 20px;
@1-menu-home-total-width: 78px;
@1-menu-home-total-height: 78px;
@1-menu-home-image: '../img/sprite.png';
@1-menu-home: 0px 30px 0px -30px 20px 20px 78px 78px '../img/sprite.png' '1.menu-home';
@2-menu-about-name: '2.menu-about';
@2-menu-about-x: 32px;
@2-menu-about-y: 0px;
@2-menu-about-offset-x: -32px;
@2-menu-about-offset-y: 0px;
@2-menu-about-width: 21px;
@2-menu-about-height: 20px;
@2-menu-about-total-width: 78px;
@2-menu-about-total-height: 78px;
@2-menu-about-image: '../img/sprite.png';
@2-menu-about: 32px 0px -32px 0px 21px 20px 78px 78px '../img/sprite.png' '2.menu-about';
@3-menu-price-name: '3.menu-price';
@3-menu-price-x: 0px;
@3-menu-price-y: 60px;
@3-menu-price-offset-x: 0px;
@3-menu-price-offset-y: -60px;
@3-menu-price-width: 12px;
@3-menu-price-height: 18px;
@3-menu-price-total-width: 78px;
@3-menu-price-total-height: 78px;
@3-menu-price-image: '../img/sprite.png';
@3-menu-price: 0px 60px 0px -60px 12px 18px 78px 78px '../img/sprite.png' '3.menu-price';
@4-menu-work-name: '4.menu-work';
@4-menu-work-x: 0px;
@4-menu-work-y: 0px;
@4-menu-work-offset-x: 0px;
@4-menu-work-offset-y: 0px;
@4-menu-work-width: 22px;
@4-menu-work-height: 20px;
@4-menu-work-total-width: 78px;
@4-menu-work-total-height: 78px;
@4-menu-work-image: '../img/sprite.png';
@4-menu-work: 0px 0px 0px 0px 22px 20px 78px 78px '../img/sprite.png' '4.menu-work';
@5-menu-patrners-name: '5.menu-patrners';
@5-menu-patrners-x: 30px;
@5-menu-patrners-y: 30px;
@5-menu-patrners-offset-x: -30px;
@5-menu-patrners-offset-y: -30px;
@5-menu-patrners-width: 21px;
@5-menu-patrners-height: 17px;
@5-menu-patrners-total-width: 78px;
@5-menu-patrners-total-height: 78px;
@5-menu-patrners-image: '../img/sprite.png';
@5-menu-patrners: 30px 30px -30px -30px 21px 17px 78px 78px '../img/sprite.png' '5.menu-patrners';
@6-menu-contacts-name: '6.menu-contacts';
@6-menu-contacts-x: 63px;
@6-menu-contacts-y: 0px;
@6-menu-contacts-offset-x: -63px;
@6-menu-contacts-offset-y: 0px;
@6-menu-contacts-width: 15px;
@6-menu-contacts-height: 25px;
@6-menu-contacts-total-width: 78px;
@6-menu-contacts-total-height: 78px;
@6-menu-contacts-image: '../img/sprite.png';
@6-menu-contacts: 63px 0px -63px 0px 15px 25px 78px 78px '../img/sprite.png' '6.menu-contacts';
@spritesheet-width: 78px;
@spritesheet-height: 78px;
@spritesheet-image: '../img/sprite.png';
@spritesheet-sprites: @1-menu-home @2-menu-about @3-menu-price @4-menu-work @5-menu-patrners @6-menu-contacts;
@spritesheet: 78px 78px '../img/sprite.png' @spritesheet-sprites;

/*
The provided classes are intended to be used with the array-like variables

.icon-home {
  .sprite-width(@icon-home);
}
.icon-email {
  .sprite(@icon-email);
}

Example usage in HTML:

`display: block` sprite:
<div class="icon-home"></div>

To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:

// CSS
.icon {
  display: inline-block;
}

// HTML
<i class="icon icon-home"></i>
*/
.sprite-width(@sprite) {
  width: extract(@sprite, 5);
}

.sprite-height(@sprite) {
  height: extract(@sprite, 6);
}

.sprite-position(@sprite) {
  @sprite-offset-x: extract(@sprite, 3);
  @sprite-offset-y: extract(@sprite, 4);
  background-position: @sprite-offset-x @sprite-offset-y;
}

.sprite-image(@sprite) {
  @sprite-image: extract(@sprite, 9);
  @sprite-image-bare: ~`"@{sprite-image}".slice(1, -1)`;
  background-image: url(@sprite-image-bare);
}

.sprite(@sprite) {
  .sprite-image(@sprite);
  .sprite-position(@sprite);
  .sprite-width(@sprite);
  .sprite-height(@sprite);
}

/*
The `.sprites` mixin generates identical output to the CSS template
  but can be overridden inside of LESS

This must be run when you have at least 2 sprites.
  If run with a single sprite, then there will be reference errors.

.sprites(@spritesheet-sprites);
*/
.sprites(@sprites, @i: 1) when (@i <= length(@sprites)) {
  @sprite: extract(@sprites, @i);
  @sprite-name: e(extract(@sprite, 10));
  .@{sprite-name} {
    .sprite(@sprite);
  }
  .sprites(@sprites, @i + 1);
}
